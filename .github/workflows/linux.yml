name: Check Linux Packages
on:
  push:
    paths:
      - 'linuxNew/**'
  pull_request:
    branches: [ master ]
    paths:
      - 'linuxNew/**'
      - '.github/workflows/linux.yml'

# Cancel existing runs if user makes another push.
concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  check-ca-certificates:
    name: "Check ca-certificates"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./linuxNew

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-java@v2
        with:
          java-version: '11'
          java-package: jdk
          architecture: x64
          distribution: 'temurin'

      - name: Build
        run: |
          export _JAVA_OPTIONS="-Xmx4G"
          ./gradlew --parallel :ca-certificates:check --stacktrace

      - uses: actions/upload-artifact@v3
        if: always() # always run even if the previous step fails
        with:
          name: test-results
          path: '**/build/test-results/**/TEST-*.xml'

  check-jdk-packages:
    name: "Check ${{ matrix.product.name }} ${{ matrix.product.version }} ${{ matrix.distro }}"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./linuxNew
    strategy:
      fail-fast: false
      matrix:
        distro: [Debian, RedHat, Suse]
        product: [
          { name: temurin, version: 8 },
          { name: temurin, version: 11 },
          { name: temurin, version: 17 },
          { name: temurin, version: 18 }
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-java@v2
        with:
          java-version: '11'
          java-package: jdk
          architecture: x64
          distribution: 'temurin'

      - name: Build
        run: |
          export _JAVA_OPTIONS="-Xmx4G"
          export DOCKER_BUILDKIT=1
          export COMPOSE_DOCKER_CLI_BUILD=1
          ./gradlew --parallel packageJdk${{ matrix.distro }} checkJdk${{ matrix.distro }} -PPRODUCT=${{ matrix.product.name }} -PPRODUCT_VERSION=${{ matrix.product.version }} --stacktrace

      - name: Relocate test results
        if: always() # always run even if the previous step fails
        run: |
          mkdir ${{ matrix.product.version }}
          mv jdk ${{ matrix.product.version }}

      - uses: actions/upload-artifact@v3
        if: always() # always run even if the previous step fails
        with:
          name: test-results
          path: '**/build/test-results/**/TEST-*.xml'

  # Ensures we don't accept a Gradle Wrapper update that has been tampered with.
  validation:
    name: "Validate Gradle Wrapper"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
